{"version":3,"sources":["features/userSlice.js","HeaderOption.js","firebase.js","Header.js","Sidebar.js","InputOption.js","Post.js","feed.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","value","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClicks","useSelector","onClick","className","Avatar","src","photoUrl","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","dispatch","useDispatch","type","placeholder","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","SmsIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","alt","displayName","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltOutlined","ChatOutlined","ShareOutlined","SendOutlined","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","onChange","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","YouTubeIcon","EventAvailableIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","profileurl","Widgets","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.998ed3f5.chunk.js","sourcesContent":["import {createSlice } from '@reduxjs/toolkit';\n\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState:{\n    user:null,\n  },\n  \n  reducers: {\n    login: (state, action) => {\n    \n      state.value = action.payload;\n    },\n    \n    logout: (state) => {\n      state.user = null;\n    },\n  },\n \n});\n\nexport const { login, logout} = userSlice.actions;\n// selector\nexport const selectUser = (state) => state.user.value;\n\n\nexport default userSlice.reducer;\n","import React from 'react'\r\nimport \"./HeaderOption.css\"\r\nimport {Avatar} from \"@material-ui/core\"\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from './features/userSlice'\r\nfunction HeaderOption({avatar, Icon, title, onClicks}) {\r\n    const user=useSelector(selectUser);\r\n    return (\r\n        <div onClick={onClicks} className =\"headerOption\">\r\n\r\n            {Icon && <Icon className=\"headerOption_icon\" />}\r\n            {avatar && ( \r\n                <Avatar className=\"headerOption_icon\" src={user?.photoUrl}>\r\n                    {user?.email[0]}\r\n                </Avatar>)}\r\n            <h3 className=\"headerOption_title\">{title}</h3> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderOption\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBkaAVd7on62DzYvPdb28srkRIy2WESNdE\",\r\n    authDomain: \"linkedin-clone-4323d.firebaseapp.com\",\r\n    projectId: \"linkedin-clone-4323d\",\r\n    storageBucket: \"linkedin-clone-4323d.appspot.com\",\r\n    messagingSenderId: \"277954136269\",\r\n    appId: \"1:277954136269:web:e04758fdb083bc1f348184\",\r\n    measurementId: \"G-CCXG68J9RV\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth =firebase.auth();\r\n\r\nexport {db, auth};","import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport SmsIcon from '@material-ui/icons/Sms';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport HeaderOption from './HeaderOption';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { logout, selectUser } from './features/userSlice';\r\nimport { auth } from './firebase';\r\n\r\nfunction Header() {\r\n    const user =useSelector(selectUser);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const logOutOfApp =() => {\r\n        dispatch(logout());\r\n        auth.signOut();\r\n    };\r\n    return (\r\n        <div className=\"header\">\r\n            <h1></h1>\r\n\r\n            <div className=\"header_left\">\r\n               <img src=\"https://image.flaticon.com/icons/png/512/174/174857.png\" />\r\n\r\n               <div className=\"header_search\">\r\n                 <SearchIcon />  \r\n                 <input type=\"text\" placeholder=\"Search\"/>\r\n               </div>\r\n\r\n            </div>\r\n            <div className=\"header_right\">\r\n                <HeaderOption \r\n                Icon={HomeIcon}\r\n                title=\"Home\"\r\n                 />\r\n                <HeaderOption \r\n                    Icon={SupervisorAccountIcon}\r\n                    title=\"My Network\"\r\n                /> \r\n                 <HeaderOption \r\n                     Icon={BusinessCenterIcon}\r\n                     title=\"Jobs\"\r\n                 />  \r\n                 <HeaderOption  \r\n                     Icon={SmsIcon}\r\n                     title=\"Message\"\r\n                 />     \r\n                 <HeaderOption \r\n                    Icon={NotificationsIcon}\r\n                    title=\"Notifications\"\r\n\r\n                 />  \r\n                 <HeaderOption avatar= {user}\r\n                     title=\"Me\"\r\n                     onClicks={logOutOfApp}\r\n                 />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport \"./Sidebar.css\"\r\nimport { Avatar } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from './features/userSlice'\r\n\r\nfunction Sidebar() {\r\n\r\n    const user=useSelector(selectUser)\r\n\r\n    const recentItem =(topic) => (\r\n        <div className=\"sidebar_recentItem\">\r\n            <span className=\"sidebar_hash\">#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"sidebar\">\r\n           <div className=\"sidebar_top\">\r\n               <img src=\"https://www.sammobile.com/wp-content/uploads/2019/03/keyguard_default_wallpaper_green-270x270.png\" alt=\"\" />\r\n               <Avatar src={user.photoUrl} className=\"sidebar_avatar\">{user.email[0]}</Avatar>\r\n               <h2>{user.displayName}</h2>\r\n               <h4>{user.email}</h4>\r\n           </div>\r\n           <div className=\"sidebar_stats\">\r\n                <div className=\"sidebar_stat\">\r\n                    <p>Who viewed You</p>\r\n                    <p className=\"sidebar_statNumber\">2543</p>\r\n                </div>\r\n                <div className=\"sidebar_stat\">\r\n                    <p>Viewed On Post</p>\r\n                    <p className=\"sidebar_statNumber\">2543</p>\r\n                </div>\r\n              \r\n           </div>\r\n           <div className=\"sidebar_bottom\">\r\n               <p>Recent</p>\r\n               {recentItem(\"Programming\")}\r\n               {recentItem(\"Electronics and communication Engineering\")}\r\n               {recentItem(\"WedDesign\")}\r\n               {recentItem(\"Reactjs\")}\r\n              \r\n\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport \"./InputOption.css\"\r\n\r\nfunction InputOption({Icon, title, color}) {\r\n    return (\r\n        <div className=\"inputOption\">\r\n            <Icon style={{color:  color}} />\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputOption\r\n","import React, { forwardRef } from 'react'\r\nimport { Avatar } from '@material-ui/core'\r\nimport \"./Post.css\"\r\nimport InputOption from './InputOption'\r\nimport { ChatOutlined, SendOutlined, ShareOutlined, ThumbUpAltOutlined } from '@material-ui/icons'\r\n\r\n\r\nconst Post=forwardRef(({name, description, message, photoUrl},ref) => {\r\n    return (\r\n        <div className=\"post\">\r\n            <div ref={ref} className=\"post_header\">\r\n                <Avatar src={photoUrl}>{name[0]}</Avatar>      \r\n                <div className=\"post_info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"post_body\">\r\n                <p>{message}</p>\r\n            </div>\r\n            <div className=\"post_buttons\">\r\n                <InputOption \r\n                    Icon={ ThumbUpAltOutlined} \r\n                    title=\"Like\" \r\n                    color=\"gray\"\r\n                />\r\n                 <InputOption \r\n                    Icon={ ChatOutlined} \r\n                    title=\"Comment\" \r\n                    color=\"gray\"\r\n                />\r\n                 <InputOption \r\n                    Icon={ ShareOutlined} \r\n                    title=\"Share\" \r\n                    color=\"gray\"\r\n                />\r\n                 <InputOption \r\n                    Icon={ SendOutlined} \r\n                    title=\"Send\" \r\n                    color=\"gray\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Post\r\n","import React, {useEffect, useState } from 'react'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport \"./feed.css\"\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport InputOption from './InputOption';\r\nimport Post from './Post';\r\nimport {db} from './firebase';\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Feed() {\r\n    const user=useSelector(selectUser);\r\n    const [input, setInput]= useState('')\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"posts\").orderBy(\"timestamp\",\"desc\").onSnapshot(snapshot =>{\r\n            setPosts(snapshot.docs.map(doc => (\r\n                {\r\n                    id:doc.id,\r\n                    data:doc.data(),\r\n                }\r\n\r\n            )))\r\n        })\r\n      \r\n    }, []);\r\n\r\n    const sendPost = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        db.collection(\"posts\").add({\r\n            name:user.displayName,\r\n            description:user.email,\r\n            message: input,\r\n            photoUrl:user.photoUrl||\"\",\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n        });\r\n        setInput(\"\");\r\n    };\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed_inputContainer\">\r\n                <div className=\"feed_input\">\r\n                    <CreateIcon />\r\n                    <form action=\"\">\r\n                        <input value={input} onChange={e => setInput(e.target.value)} type=\"text\" placeholder=\"Start a Post\" />\r\n                        <button onClick={sendPost} type=\"submit\">Submit</button>\r\n\r\n                    </form>\r\n                   \r\n                </div>\r\n                <div className=\"feed_inputOptions\">\r\n                    <InputOption \r\n                        Icon={ImageIcon}\r\n                        title='Photo'\r\n                        color='#70B5F9'\r\n                    />\r\n                     <InputOption \r\n                        Icon={YouTubeIcon}\r\n                        title='Video'\r\n                        color='#E7A33E'\r\n                    />\r\n                     <InputOption \r\n                        Icon={EventAvailableIcon}\r\n                        title='Event'\r\n                        color='#C0CBCD'\r\n                    />\r\n                    <InputOption \r\n                        Icon={CalendarViewDayIcon}\r\n                        title='Write article'\r\n                        color='#7FC15E'\r\n                    />\r\n                </div>\r\n            </div>\r\n            <FlipMove>\r\n\r\n            \r\n            {posts.map(({id,data:{name, description, message,photoUrl}}) => (\r\n                <Post \r\n                    key={id}\r\n                    name={name}\r\n                    description={description}\r\n                    message={message}\r\n                    photoUrl={photoUrl}\r\n                />\r\n            ))}\r\n            </FlipMove>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React,{useState} from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from './features/userSlice';\r\nimport { auth } from './firebase';\r\nimport \"./Login.css\"\r\n\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const loginToApp =(e) => {\r\n        e.preventDefault();\r\n        auth\r\n            .signInWithEmailAndPassword(email,password)\r\n            .then((userAuth) =>{\r\n                dispatch(login({\r\n                    email: userAuth.user.email,\r\n                    uid:userAuth.user.uid,\r\n                    displayName:userAuth.user.displayName,\r\n                    profileUrl: userAuth.user.photoURL,\r\n                }))\r\n            }).catch(error => alert(error))\r\n    };\r\n    const register=() =>{\r\n        if(!name){\r\n            return alert(\"Please enter a full Name\")\r\n        }\r\n\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n        .then((userAuth) =>{\r\n                userAuth.user.updateProfile({\r\n                displayName: name,\r\n                profileurl:profilePic,\r\n            })\r\n            .then(() =>{\r\n                dispatch(login({\r\n                    email: userAuth.user.email,\r\n                    uid:userAuth.user.uid,\r\n                    displayName:name,\r\n                    photoUrl: profilePic,\r\n                }))\r\n            })\r\n        }).catch(error => alert(error))\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"https://content.linkedin.com/content/dam/me/business/en-us/amp/brand-site/v2/bg/LI-Logo.svg.original.svg\" alt=\"\" />\r\n\r\n\r\n            <form action=\"\">\r\n                <input \r\n                value={name} \r\n                onChange={(e) => setName(e.target.value)} \r\n                placeholder=\"Full name \" \r\n                type=\"text\"\r\n                 />\r\n                <input value={profilePic}  \r\n                onChange={(e) => setProfilePic(e.target.value)} \r\n                placeholder=\"Profile pic URL\" type=\"text\"\r\n                 />\r\n                <input \r\n                value={email} \r\n                onChange={(e) => setEmail(e.target.value)} \r\n                placeholder=\"Email \" \r\n                type=\"email\" \r\n                />\r\n                <input \r\n                value={password} \r\n                onChange={(e) => setPassword(e.target.value)} \r\n                placeholder=\"Password \" \r\n                type=\"password\" \r\n                />\r\n                <button type=\"submit\" onClick={loginToApp}>Sign In</button>\r\n            </form>\r\n            <p>Not a Member? <span className=\"login_register\"onClick={register}>Register</span></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import InfoIcon from '@material-ui/icons/Info';\r\nimport React from 'react'\r\nimport \"./Widgets.css\";\r\nimport FiberManualRecord  from '@material-ui/icons/FiberManualRecord';\r\nfunction Widgets() {\r\n    const newsArticle = (heading, subtitle) =>(\r\n        <div className=\"widget_article\">\r\n            <div className=\"widget_articleLeft\">\r\n                <FiberManualRecord />\r\n            </div>\r\n            <div className=\"widget_articleRight\">\r\n                <h4>{heading}</h4>\r\n                <p>{subtitle}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets_header\">\r\n                <h2>LinkedIn News</h2>\r\n                <InfoIcon />\r\n            </div>\r\n\r\n            {newsArticle(\"Covid case Update\",\"Todays Cases are 14000\")}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import React,{useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Feed from './feed'\nimport Login from './Login';\nimport {useSelector} from \"react-redux\"\nimport {login,logout,selectUser} from \"./features/userSlice\"\nimport { auth } from './firebase';\nimport Widgets from \"./Widgets\"\n\nfunction App() {\n  const user =useSelector(selectUser)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    auth.onAuthStateChanged(userAuth =>{\n      if (userAuth){\n        // user logged in\n        dispatch(login({\n          email: userAuth.email,\n          uid:userAuth.uid,\n          displayName:userAuth.displayName,\n          photoUrl: userAuth.photoURL,\n        }))\n      }else{\n        // user logged out\n        dispatch(logout());\n      }\n\n    })\n    \n  }, [])\n\n  return (\n    <div className=\"app\">\n    \n      {/* Header */}\n      <Header />\n      {!user ? (\n        <Login />\n      ) : (\n      <div className=\"app_body\">\n        <Sidebar />\n        <Feed />\n        <Widgets />\n      </div>\n      )}\n\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}